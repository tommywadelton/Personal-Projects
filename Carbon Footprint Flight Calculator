#################################################################################################################
# Motivation
# I wrote this code to calculate the estimated carbon footprint of a flight and how much I need to donate to offset that amount
# I am an avid traveler, but also am big on trying to find ways to fight climate change
# I like practical scripts like this that give me an actionable answer to a question I have

#Research
# My C02 estimates are based on my research online
# It assumes that the plane is a 747 or of similar size
# The KG of C02 per flight are pretty close to what you see on google flights
# A mature tree will offset about 20 kg of C02 / year
# There is a website, teamtrees.org, that will plant 1 tree for every $1 donated

################################################################################################
#Example of the output:
    
#Trip #1: Denver to Indianapolis on 08/25/2023, 1944.32 miles, produced 241kg of C02. I need to donate $12.05 to offset this amount
#Trip #2: Denver to Quito on 08/25/2023, 3216.56 miles, produced 399kg of C02. I need to donate $19.95 to offset this amount
#Trip #3: Quito to Denver on 08/25/2023, 3216.56 miles, produced 399kg of C02. I need to donate $19.95 to offset this amount
#Trip #4: Denver to Burbank on 08/25/2023, 1695.08 miles, produced 210kg of C02. I need to donate $10.50 to offset this amount
#Trip #5: Denver to Philly on 09/25/2023, 3101.24 miles, produced 385kg of C02. I need to donate $19.25 to offset this amount
#Trip #6: Denver to Richmond on 11/10/2023, 2951.2 miles, produced 366kg of C02. I need to donate $18.30 to offset this amount
#Trip #7: Denver to Indianapolis on 11/21/2023, 1944.32 miles, produced 241kg of C02. I need to donate $12.05 to offset this amount
#Trip #8: Denver to Indianapolis on 12/23/2023, 1944.32 miles, produced 241kg of C02. I need to donate $12.05 to offset this amount
#Trip #9: Denver to Moi International on 08/03/2024, 9089.82 miles, produced 1129kg of C02. I need to donate $56.45 to offset this amount
#Trip #10: Mombasa to Kilimanjaro on 08/03/2024, 178.56 miles, produced 22kg of C02. I need to donate $1.10 to offset this amount

#2023 Stats:
#My total carbon Footprint from air travel in 2023 is approximately 2487 kg of C02
#To offset my total C02 contribution, I need to donate $124.35
#In 2023, I have traveleled 20013 miles during 8 trip(s)

#2024 Stats:
#My total carbon Footprint from air travel in 2024 is approximately 1151 kg of C02
#I need to donate $57.55 to offset my 2023 total C02 contribution.
#In 2024, I have traveleled 9268 miles during 2 trip(s)

#All Time Stats:
#My total Carbon Footprint from air travel is approximately 3638 kg of C02
#I need to donate $181.90 to offset my total C02 contribution.
#In Total, I have traveleled 29281 miles during 10 trips


#CODE
#################################################################################################################
#import packages
import pandas as pd
from math import radians, sin, cos, sqrt, atan2

df = pd.read_excel('/Users/tommywadelton/Documents/US_Airport_Data.xlsx', sheet_name='Travel_to_Date')

df['Date'] = pd.to_datetime(df['Date'])

# Initialize lists to store distances and donations
distances_2023 = []
distances_2024 = []
distances_2025 = []

df_2023 = df.where(df['Year'] == 2023).dropna()
df_2024 = df.where(df['Year'] == 2024).dropna()
df_2025 = df.where(df['Year'] == 2025).dropna()

donations_2023 = []
donations_2024 = []
donations_2025 = []

# Initialize counters for total calculations
global total_trips_taken
total_trips_taken = 0
total_distance_traveled = 0
total_carbon_footprint = 0
total_flights_taken = 0
total_flights_taken_2023 = 0
total_flights_taken_2024 = 0
total_flights_taken_2025 = 0
total_amount_donated = 0
donation_amount_remaining = 0
total_trees_planted = 0


# Calculate distances for trips
for trip in df['Trip']:
    year = df.iloc[int(trip) - 1]['Year']
    roundtrip = df.iloc[int(trip) - 1]['Roundtrip']
    lat1 = radians(df.iloc[int(trip) - 1]['Starting_Lat'])
    lon1 = radians(df.iloc[int(trip) - 1]['Starting_Long'])
    lat2 = radians(df.iloc[int(trip) - 1]['Ending_Lat'])
    lon2 = radians(df.iloc[int(trip) - 1]['Ending_Long'])
    
    dlon = lon2 - lon1
    dlat = lat2 - lat1
    
    a = sin(dlat / 2)**2 + cos(lat1) * cos(lat2) * sin(dlon / 2)**2
    c = 2 * atan2(sqrt(a), sqrt(1 - a))
    
    distance = 6373.0 * c  # Radius of the Earth in km
    distance = round(distance, 0) * (2 if roundtrip == 'Y' else 1)
    
    if year == 2023:
        distances_2023.append(distance)
        total_flights_taken_2023 += 2 if roundtrip == 'Y' else 1
    elif year == 2024:
        distances_2024.append(distance)
        total_flights_taken_2024 += 2 if roundtrip == 'Y' else 1
    elif year == 2025:
        distances_2025.append(distance)
        total_flights_taken_2025 += 2 if roundtrip == 'Y' else 1
    
    # Update total flights taken
    total_flights_taken += 2 if roundtrip == 'Y' else 1

# Calculate donations and print trip information

print("2023:\n")
for index, (trip_num, distance, start, end, date, donated) in enumerate(zip(df_2023['Trip'], distances_2023, df_2023['Starting Location City Name'], df_2023['Ending Location City Name'], df_2023['Date'], df_2023['Donated']), start=1):
    trip_num = int(trip_num)
    carbon_calc = int(distance * .07705)
    distance_miles = int(distance * .62)
    trees = carbon_calc / 20
    trees_dollars = round(trees, 2)
    
    formatted_date = date.strftime("%m/%d/%Y")
    
    if donated == 'Y':
        total_amount_donated += trees_dollars
        total_trees_planted += trees
        print(f"Trip #{trip_num}: {start} to {end} on {formatted_date}, {distance_miles} miles, produced {carbon_calc} kg of CO2\nAmount donated: ${trees_dollars:,.2f}\n")
    else:
        donation_amount_remaining += trees_dollars
        print(f"Trip #{trip_num}: {start} to {end} on {formatted_date}, {distance_miles} miles, produced {carbon_calc} kg of CO2. I need to donate ${trees_dollars:,.2f} to offset this amount.\n")
    
    # Update total calculations
    total_trips_taken += 1
    total_distance_traveled += distance_miles
    total_carbon_footprint += carbon_calc

print("2024:\n")

for index, (trip_num, distance, start, end, date, donated) in enumerate(zip(df_2024['Trip'], distances_2024, df_2024['Starting Location City Name'], df_2024['Ending Location City Name'], df_2024['Date'], df_2024['Donated']), start=1):
    trip_num = int(trip_num)
    carbon_calc = int(distance * .07705)
    distance_miles = int(distance * .62)
    trees = carbon_calc / 20
    trees_dollars = round(trees, 2)
    
    formatted_date = date.strftime("%m/%d/%Y")
    
    if donated == 'Y':
        total_amount_donated += trees_dollars
        total_trees_planted += trees
        print(f"Trip #{trip_num}: {start} to {end} on {formatted_date}, {distance_miles} miles, produced {carbon_calc} kg of CO2\nAmount donated: ${trees_dollars:,.2f}\n")
    else:
        donation_amount_remaining += trees_dollars
        print(f"Trip #{trip_num}: {start} to {end} on {formatted_date}, {distance_miles} miles, produced {carbon_calc} kg of CO2. I need to donate ${trees_dollars:,.2f} to offset this amount.\n")
    
    # Update total calculations
    total_trips_taken += 1
    total_distance_traveled += distance_miles
    total_carbon_footprint += carbon_calc

print("\n2025:\n")

#2025
for index, (trip_num, distance, start, end, date, donated) in enumerate(zip(df_2025['Trip'], distances_2025, df_2025['Starting Location City Name'], df_2025['Ending Location City Name'], df_2025['Date'], df_2025['Donated']), start=1):
    trip_num = int(trip_num)
    carbon_calc = int(distance * .07705)
    distance_miles = int(distance * .62)
    trees = carbon_calc / 20
    trees_dollars = round(trees, 2)
    
    formatted_date = date.strftime("%m/%d/%Y")
    
    if donated == 'Y':
        total_amount_donated += trees_dollars
        total_trees_planted += trees
        print(f"Trip #{trip_num}: {start} to {end} on {formatted_date}, {distance_miles} miles, produced {carbon_calc} kg of CO2\nAmount donated: ${trees_dollars:,.2f}\n")
    else:
        donation_amount_remaining += trees_dollars
        print(f"Trip #{trip_num}: {start} to {end} on {formatted_date}, {distance_miles} miles, produced {carbon_calc} kg of CO2. I need to donate ${trees_dollars:,.2f} to offset this amount.\n")
    
    # Update total calculations
    total_trips_taken += 1
    total_distance_traveled += distance_miles
    total_carbon_footprint += carbon_calc

average_plane_speed_mph = 525

# Print summary statistics for 2023

total_distance_2023 = sum(distances_2023)
# Define average plane speed in miles per hour
distance_miles_2023 = int(total_distance_2023 * .62)
total_flight_hours_2023 = distance_miles_2023 / average_plane_speed_mph
carbon_calc_2023 = int(total_distance_2023 * .07705)
trees_2023 = carbon_calc_2023 / 20
trees_dollars_2023 = round(trees_2023, 2)

trip_number_2023 = len(df_2023.index)
trip_number_2024 = len(df_2024.index)
trip_number_2025 = len(df_2025.index)

print("\n2023 Stats:")
print(f"My total Carbon Footprint from air travel in 2023 is approximately {carbon_calc_2023} kg of CO2")
#print("To offset my total CO2 contribution, I need to donate ${:,.2f}".format(trees_dollars_2023))
print(f"In 2023, I have traveled {distance_miles_2023} miles, on {total_flights_taken_2023} flights, during {trip_number_2023} trip(s)\nI spent approximately {total_flight_hours_2023:.2f} hours in the air in 2023.")

# Print summary statistics for 2024
total_distance_2024 = sum(distances_2024)
distance_miles_2024 = int(total_distance_2024 * .62)
total_flight_hours_2024 = distance_miles_2024 / average_plane_speed_mph
carbon_calc_2024 = int(total_distance_2024 * .07705)
trees_2024 = carbon_calc_2024 / 20
trees_dollars_2024 = round(trees_2024, 2)


print("\n2024 Stats:")
print(f"My total Carbon Footprint from air travel in 2024 is approximately {carbon_calc_2024} kg of CO2")
#print("I need to donate ${:,.2f} to offset my 2024 total CO2 contribution.".format(trees_dollars_2024))
print(f"In 2024, I have traveled {distance_miles_2024} miles, on {total_flights_taken_2024} flights, during {trip_number_2024} trip(s)\nI spent approximately {total_flight_hours_2024:.2f} hours in the air in 2024.")


total_distance_2025 = sum(distances_2025)
distance_miles_2025 = int(total_distance_2025 * .62)
total_flight_hours_2025 = distance_miles_2025 / average_plane_speed_mph
carbon_calc_2025 = int(total_distance_2025 * .07705)
trees_2025 = carbon_calc_2025 / 20
trees_dollars_2025 = round(trees_2025, 2)


print("\n2025 Stats:")
print(f"My total Carbon Footprint from air travel in 2025 is approximately {carbon_calc_2025} kg of CO2")
#print("I need to donate ${:,.2f} to offset my 2025 total CO2 contribution.".format(trees_dollars_2025))
print(f"In 2025, I have traveled {distance_miles_2025} miles, on {total_flights_taken_2025} flights, during {trip_number_2025} trip(s)\nI spent approximately {total_flight_hours_2025:.2f} hours in the air in 2025.")


# Print all-time statistics
total_distance_all_time = total_distance_2023 + total_distance_2024 + total_distance_2025
distance_miles_all_time = int(total_distance_all_time * .62)
total_flight_hours = distance_miles_all_time / average_plane_speed_mph
days_in_flight = total_flight_hours / 24
times_around_earth = round(distance_miles_all_time / 24901, 2)
carbon_calc_all_time = int(total_distance_all_time * .07705)
trees_all_time = carbon_calc_all_time / 20
trees_dollars_all_time = round(trees_all_time, 2)


trip_number_all_time = int(max(df['Trip']))

print("\nAll Time Stats:")
print(f"My total Carbon Footprint from air travel is approximately {carbon_calc_all_time} kg of CO2")
print("I need to donate ${:,.2f} to offset my total CO2 contribution.".format(trees_dollars_all_time))
print(f"In Total, I have traveled {distance_miles_all_time} miles during {trip_number_all_time} trips")

# Print total amount donated and remaining amount needed to donate
print("\nTotal Amount Donated: ${:,.2f}".format(total_amount_donated))
print("Donation Amount Remaining: ${:,.2f}".format(donation_amount_remaining))

# Print total trees planted, total trips taken, total distance traveled, and total flights taken
print(f"Total Trees Planted: {int(total_trees_planted)}")
print(f"Total Trips Taken: {total_trips_taken}")
print(f"Total Flights Taken: {total_flights_taken}")
print(f"Total Flight Hours: {total_flight_hours:.2f}")
print(f"Total Days in Flight since 2023: {days_in_flight:.2f}")
print(f"Total Distance Traveled: {total_distance_traveled} miles, which is equivalent to flying around the Earth {times_around_earth} times. ")
print(f"Total Carbon Footprint: {total_carbon_footprint} kg of CO2")

