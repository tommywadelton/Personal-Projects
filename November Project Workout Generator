#November Project Workout Generator

import random
import itertools
import warnings
import pandas as pd
warnings.filterwarnings("ignore")

Wed_Locations = ['Capitol Building', 'Civic Center']

Friday_Locations = ['City Park','Arkins Promendate','Cheeseman','Mile High Stadium','Confluence Park','Govenors Park','Commons Park','Sloans Lake']

Workout_Type = ['Dice','Cards','Rock Paper Scissors']

Workout_Structure = ['Solo/Loops'
                     ,'Solo/Loops'
                     ,'Solo/Loops'
                     ,'Solo/Loops'
                     ,'Solo/Loops'
                     ,'Partner'
                     ,'Partner'
                     ,'3 Person']

Exercises_Arm = ['Push Up' #arm
    ,'Dips' #arm
    ,'Incline Pushups' #arm
    ,'Inchworm with optional push up' #arm
    ,'Partner Pushups' #arm
    ]

Exercises_Ab = ['Ab Star' #ab
    ,'Inchowm to Plank Jack' #ab
    ,'Bent arm plank with hip dips' #ab
    ,'Ab Twists' #ab
    ,'Windmill Planks' #ab
    ,'Shoulder Taps' #ab
    ]

Exercises_Leg = ['Step Ups' #leg
    ,'Reverse Lunge to Knee Drive' #leg
    ,'Touchdown Squat' #leg
    ,'Seal Jack' #leg
    ,'Soccer Taps' #leg
    ]

Responsibilities = ['Tommy','Becca', 'Tommy', 'Becca']

Whos_Doing_What = ['Bounce','Workout','Burnout','Announcments']

c = list(zip(Responsibilities, Whos_Doing_What))

random.shuffle(c)

a, b = zip(*c)

df = pd.DataFrame(c, columns = ['Person', 'Assignment'])

EMOM = ['Pushups','Burpees','Squats']


#Regular_Burnout = ['hold a squat run down star jump sprint back tag a partner out. hold a plank until team is done']

day_of_week = input("Wednesday or Friday? Type (W or F): ")
#num_of_exercises = int(input("How many exercises? "))

Workout = random.choice(Workout_Type)

Workout_Structure = random.choice(Workout_Structure)

if Workout == 'Cards':
    x = 4
elif Workout == 'Dice':
    x = 6
elif Workout == 'Rock Paper Scissors':
        x = 6

Exercise = random.sample(Exercises_Arm + Exercises_Ab + Exercises_Leg, x)

def Location():
    if day_of_week == 'W':
        location = random.choice(Wed_Locations) 
        print(location)
    else:
        location = random.choice(Friday_Locations)
        print(location)

Burnout_Type = ['Tabata','EMOM','Song','Hills', 'Race']

Rounds = ['Y', 'N'] 

Burnout_Songs = ['Thunderstruck'
    ,'Bicycles'
    ,'Push It'
    ,'Chumbawamba'
    ]

Song_Exercise = ['Pushups'
    ,'Burpees'
    ,'Squats'
    ]

def Burnout():
    Burnout = random.choice(Burnout_Type)
    if Burnout == 'Tabata':
        print('Tabata Burnout')
    elif Burnout == 'EMOM': #Works
        EMOM_Ex = random.choice(EMOM)
        print(f'EMOM: {EMOM_Ex}')
    elif Burnout == 'Song':
        Burnout_Song = random.choice(Burnout_Songs)
        print(f'Song: {Burnout_Song}')
    elif Burnout == 'Hills':
        print('Hills')
    else:
        print("Big Yikes")

print("\nWorkout Example:\n") 

print("Location:")
Location()

df['Person'] =  df['Person'].apply(lambda x: x.replace('[','').replace(']','')) 

bouncer = df.loc[df["Assignment"] == 'Bounce']
bouncer = bouncer["Person"].values
bouncer = str(bouncer)
print("\nBounce:")
print(bouncer[2: -2])

workout_explainer = df.loc[df["Assignment"] == 'Workout']
print("\nWorkout:")
workout_explainer = workout_explainer["Person"].values
workout_explainer = str(workout_explainer)
print(workout_explainer[2: -2])
      
print(f"\nWorkout: {Workout} \nType: {Workout_Structure}\n\nExercises:\n")



for i in Exercise:
    print(i)

burner_outer = df.loc[df["Assignment"] == 'Burnout']
print("\nBurnout:")
burner_outer = burner_outer["Person"].values
burner_outer = str(burner_outer)
print(burner_outer[2: -2] + "\n")
Burnout()

announcing_shit = df.loc[df["Assignment"] == 'Announcments']

print("\nAnnouncments:")
announcing_shit = announcing_shit["Person"].values
announcing_shit = str(announcing_shit)
print(announcing_shit[2: -2])
